
1 class Wander extends Face:
2// The radius and forward offset of the wander circle.
3 wanderOffset: f64
4 wanderRadius: f64
5
6// The maximum rate at which the wander orientation can change.
7 wanderRate: f64
8
9// The current orientation of the wander target.
10 wanderOrientation: f64
11
12// The maximum acceleration of the character.
13 maxAcceleration: f64
14
15// Again we donâ€™t need a new target.
16// ... Other data is derived from the superclass ...
17
18 fn getSteering() -> SteeringOutput:
19// 1. Calculate the target to delegate to face
20// Update the wander orientation.
21 wanderOrientation += randomBinomial() * wanderRate
22
23// Calculate the combined target orientation.
24 targetOrientation = wanderOrientation + character.orientation
25
Target 
\ 
Circle at fixed 
Seek o"tp"t 6;staoce ahead 76 Chapter 3 Movement
26// Calculate the center of the wander circle.
27 target = character.position +
28 wanderOffset * character.orientation.asVector()
29
30// Calculate the target location.
31 target += wanderRadius * targetOrientation.asVector()
32
33// 2. Delegate to face.
34 result = Face.getSteering()
35
36// 3. Now set the linear acceleration to be at full
37// acceleration in the direction of the orientation.
38 result.linear =
39 maxAcceleration * character.orientation.asVector()
40
41// Return it.
42 return result
